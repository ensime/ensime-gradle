plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
//    id 'com.jfrog.artifactory' version '4.0.0'
//    id 'com.jfrog.bintray' version '1.5'
//    id 'com.gradle.plugin-publish' version '0.9.2'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'org.jetbrains.kotlin.jvm' version '1.1.3'
}

group = 'org.ensime.gradle'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

ext {
    kotlinVersion = '1.1.3'
    projectUrl = 'https://github.com/ensime/ensime-gradle'
    scmUrl = 'https://github.com/ensime/ensime-gradle'
    bintrayUser = propOrEnv('BINTRAY_USER')
    bintrayPassword = propOrEnv('BINTRAY_API_KEY')
    bintrayRepo = propOrEnv('BINTRAY_REPO')
}

gradlePlugin {
    plugins {
        ensime {
            id = "org.ensime.gradle"
            implementationClass = "org.ensime.gradle.EnsimePlugin"
        }
    }
}


repositories {
    jcenter()
}

license {
    header rootProject.file('HEADER')
    strictCheck true
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.1.3"

    testImplementation 'io.kotlintest:kotlintest:2.0.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task showConfigurations {}

showConfigurations.doLast {
    project.configurations.each {
        println(it.name)
        if (it.canBeResolved)
            println(it.resolvedConfiguration.resolvedArtifacts)
    }
}

publishing {
    publications {
        ensime(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name archivesBaseName
                    description 'ENSIME-Gradle is a Gradle plugin for creating ENSIME configuration files for Gradle Projects'
                    url projectUrl

                    scm {
                        url scmUrl
                        connection scmUrl
                        developerConnection scmUrl
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'coacoas'
                            name 'Bill Carlson'
                            email 'bill@coacoas.net'
                        }
                    }
                }
            }
        }
    }
}
//
// bintray {
//     user = bintrayUser
//     key = bintrayPassword
//     publications = ['ensime']
//     pkg {
//         repo = bintrayRepo
//         name = archivesBaseName
//         version = version
//     }
// }
//
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

//
// //pluginBundle {
// //    website = projectUrl
// //    vcsUrl = scmUrl
// //    description = 'The ENSIME plugin for Gradle generates .ensime configuration files for Gradle Java/Scala projects'
// //
// //    plugins {
// //        ensime {
// //            id = 'org.ensime.gradle'
// //            displayName = 'ENSIME plugin for Gradle'
// //            tags = ['build', 'scala', 'java', 'ensime', 'ide', 'development']
// //        }
// //    }
// //}
//
def propOrEnv(key, defaultValue = '') {
    hasProperty(key) ? property(key) : (System.env[key] ?: defaultValue)
}

// //artifactoryPublish.dependsOn check
// //publishPlugins.dependsOn(bintrayUpload)
// //bintrayUpload.dependsOn(assemble, check)
//
// if (version.endsWith('-SNAPSHOT')) {
//     publish.dependsOn artifactoryPublish
// } else {
//     publish.dependsOn publishPlugins
// }
//